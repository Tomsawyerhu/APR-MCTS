{
    "project": "Chart",
    "bugid": 5,
    "internal_context": {
        "field": [
            {
                "comment": "For serialization.\n",
                "content": "/**\n *  */\nstatic final long serialVersionUID = -5908509288197150436L;"
            },
            {
                "comment": "Storage for the data items in the series.\n",
                "content": "// In version 0.9.12, in response to several developer requests, I changed\n// the 'data' attribute from 'private' to 'protected', so that others can\n// make subclasses that work directly with the underlying data structure.\n/**\n *  */\nprotected List data;"
            },
            {
                "comment": "The maximum number of items for the series.\n",
                "content": "/**\n *  */\nprivate int maximumItemCount = Integer.MAX_VALUE;"
            },
            {
                "comment": "A flag that controls whether the items are automatically sorted.\n",
                "content": "/**\n *  */\nprivate boolean autoSort;"
            },
            {
                "comment": "A flag that controls whether or not duplicate x-values are allowed.\n",
                "content": "/**\n *  */\nprivate boolean allowDuplicateXValues;"
            }
        ],
        "method": [
            {
                "signature": "<init>(java.lang.Comparable, boolean): org.jfree.data.xy.XYSeries",
                "summary": "Creates an empty XYSeries with optional auto-sorting and permits duplicate values, based on the provided key."
            },
            {
                "signature": "<init>(java.lang.Comparable, boolean, boolean): org.jfree.data.xy.XYSeries",
                "summary": "Creates an empty XY series with options for sorting and duplicate x-values."
            },
            {
                "signature": "add(double, double): void",
                "summary": "Adds a data point to the series and notifies all listeners of the change."
            },
            {
                "signature": "add(double, double, boolean): void",
                "summary": "Adds a data item to the series and optionally notifies registered listeners of the change event."
            },
            {
                "signature": "add(double, java.lang.Number): void",
                "summary": "Adds a data point to a series and notifies listeners of the change, allowing null y-values."
            },
            {
                "signature": "add(double, java.lang.Number, boolean): void",
                "summary": "This method adds a data point to a series and optionally notifies registered listeners of the change."
            },
            {
                "signature": "add(java.lang.Number, java.lang.Number): void",
                "summary": "Adds data points to a series and notifies listeners of changes, rejecting duplicates if allowed."
            },
            {
                "signature": "add(java.lang.Number, java.lang.Number, boolean): void",
                "summary": "Adds a data point to the series and optionally notifies listeners of the change event."
            },
            {
                "signature": "add(org.jfree.data.xy.XYDataItem): void",
                "summary": "The method adds an XY data item and notifies registered listeners of the change."
            },
            {
                "signature": "add(org.jfree.data.xy.XYDataItem, boolean): void",
                "summary": "This method adds a (x, y) data item to a series and optionally notifies listeners of the change."
            },
            {
                "signature": "addOrUpdate(java.lang.Number, java.lang.Number): org.jfree.data.xy.XYDataItem",
                "summary": "This method adds or updates an XY data item and notifies listeners of the change."
            },
            {
                "signature": "clear(): void",
                "summary": "The `clear` method removes all elements from the data collection and notifies listeners of the change."
            },
            {
                "signature": "clone(): java.lang.Object",
                "summary": "This method creates and returns a deep clone of the XYSeries object."
            },
            {
                "signature": "createCopy(int, int): org.jfree.data.xy.XYSeries",
                "summary": "Copies a subset of data from the current time series to create a new series."
            },
            {
                "signature": "delete(int, int): void",
                "summary": "Deletes a specified range of items from the series and notifies listeners of the change."
            },
            {
                "signature": "equals(java.lang.Object): boolean",
                "summary": "Compares an object to determine if it is equal to the current XYSeries instance."
            },
            {
                "signature": "getAllowDuplicateXValues(): boolean",
                "summary": "This method retrieves the flag indicating if duplicate x-values are permitted."
            },
            {
                "signature": "getAutoSort(): boolean",
                "summary": "Retrieves the auto-sort status for items in the series, which is defined during construction."
            },
            {
                "signature": "getDataItem(int): org.jfree.data.xy.XYDataItem",
                "summary": "This method retrieves the data item at the specified index from a collection."
            },
            {
                "signature": "getItemCount(): int",
                "summary": "Returns the total number of items in the series."
            },
            {
                "signature": "getItems(): java.util.List",
                "summary": "Returns an unmodifiable list of XYDataItem objects representing the series data items."
            },
            {
                "signature": "getMaximumItemCount(): int",
                "summary": "Retrieves the maximum number of items that can be retained in the series, defaulting to Integer.MAX_VALUE."
            },
            {
                "signature": "getX(int): java.lang.Number",
                "summary": "Retrieves the x-value at a specified zero-based index from a data item."
            },
            {
                "signature": "getY(int): java.lang.Number",
                "summary": "This method retrieves the y-value of a data item at a specified zero-based index."
            },
            {
                "signature": "hashCode(): int",
                "summary": "Generates a hash code based on selected data items and configuration attributes for efficient data management."
            },
            {
                "signature": "indexOf(java.lang.Number): int",
                "summary": "Finds the index of an item with a specified x-value in a potentially unsorted series, returning -1 if not found."
            },
            {
                "signature": "remove(int): org.jfree.data.xy.XYDataItem",
                "summary": "Removes an item at a specified index and notifies listeners of the change."
            },
            {
                "signature": "remove(java.lang.Number): org.jfree.data.xy.XYDataItem",
                "summary": "The method removes an item by its x-value and notifies listeners of the change."
            },
            {
                "signature": "setMaximumItemCount(int): void",
                "summary": "Sets the maximum item count for a series, ensuring excess items are removed and listeners are notified of changes."
            },
            {
                "signature": "toArray(): double[][]",
                "summary": "Converts a series of x and y values into a two-dimensional double array."
            },
            {
                "signature": "update(java.lang.Number, java.lang.Number): void",
                "summary": "Updates the y-value of an existing item in a series based on the specified x-value."
            },
            {
                "signature": "updateByIndex(int, java.lang.Number): void",
                "summary": "Updates an itemâ€™s value in a series and notifies all listeners of the change."
            },
            {
                "signature": "<init>(java.lang.Comparable): org.jfree.data.xy.XYSeries",
                "summary": "Initializes a new empty XY series that sorts items by x-value and permits duplicate x-values."
            }
        ]
    },
    "external_context": {
        "relevant_class": [
            {
                "name": "org.jfree.data.xy.XYDataItem",
                "method": [
                    {
                        "signature": "<init>(java.lang.Number, java.lang.Number): org.jfree.data.xy.XYDataItem",
                        "summary": "Constructs a new data item with a mandatory x-value and an optional y-value."
                    },
                    {
                        "signature": "<init>(double, double): org.jfree.data.xy.XYDataItem",
                        "summary": "Creates a new XY data item using specified x and y values."
                    },
                    {
                        "signature": "toString(): java.lang.String",
                        "summary": "Returns a string representation of the instance's coordinates for debugging purposes."
                    },
                    {
                        "signature": "setY(java.lang.Number): void",
                        "summary": "Sets the y-value of a data item, allowing null values but not modifying the x-value."
                    },
                    {
                        "signature": "setY(double): void",
                        "summary": "This method updates the y-value of a data item without modifying its x-value."
                    },
                    {
                        "signature": "hashCode(): int",
                        "summary": "Calculates and returns a hash code based on the object's x and y properties."
                    },
                    {
                        "signature": "getYValue(): double",
                        "summary": "Returns the y-value as a double, or NaN if the value is null."
                    },
                    {
                        "signature": "getY(): java.lang.Number",
                        "summary": "Retrieves the y-value, which may be null."
                    },
                    {
                        "signature": "getXValue(): double",
                        "summary": "The method returns the x-value as a double primitive."
                    },
                    {
                        "signature": "getX(): java.lang.Number",
                        "summary": "Retrieves the x-value, ensuring it is never null."
                    },
                    {
                        "signature": "equals(java.lang.Object): boolean",
                        "summary": "Compares this object to another for equality based on x and y attributes."
                    },
                    {
                        "signature": "compareTo(java.lang.Object): int",
                        "summary": "Compares the x-value of this object with another, returning an integer indicating their relative order."
                    },
                    {
                        "signature": "clone(): java.lang.Object",
                        "summary": "This method creates and returns a clone of the current object."
                    }
                ]
            }
        ],
        "util_class": [
            {
                "name": "org.jfree.chart.util.ObjectUtilities",
                "method": [
                    {
                        "signature": "hashCode(java.lang.Object): int",
                        "summary": "Returns the hash code of an object, or zero if the object is null."
                    },
                    {
                        "signature": "<init>(): org.jfree.chart.util.ObjectUtilities",
                        "summary": "The `ObjectUtilities` class serves as a utility class, preventing instantiation by being declared private."
                    },
                    {
                        "signature": "setClassLoaderSource(java.lang.String): void",
                        "summary": "Sets the classloader source to use, either from the thread context or the context classloader."
                    },
                    {
                        "signature": "setClassLoader(java.lang.ClassLoader): void",
                        "summary": "Sets a custom classloader, or resets to default if null is provided."
                    },
                    {
                        "signature": "parseVersions(java.lang.String): java.lang.String[]",
                        "summary": "The method splits a version string by dots into an array of version components."
                    },
                    {
                        "signature": "loadAndInstantiate(java.lang.String, java.lang.Class, java.lang.Class): java.lang.Object",
                        "summary": "Instantiates a class type safely based on the provided class name and source class loader, returning null on failure."
                    },
                    {
                        "signature": "loadAndInstantiate(java.lang.String, java.lang.Class): java.lang.Object",
                        "summary": "Instantiates a class by name using the source's class loader, returning null if an error occurs."
                    },
                    {
                        "signature": "isJDK14(): boolean",
                        "summary": "Determines if the current Java Runtime Environment is version 1.4 or higher."
                    },
                    {
                        "signature": "clone(java.lang.Object): java.lang.Object",
                        "summary": "Clones the specified object if it supports cloning, otherwise throws a CloneNotSupportedException."
                    },
                    {
                        "signature": "convertName(java.lang.String, java.lang.Class): java.lang.String",
                        "summary": "Transforms a class-relative resource name into a global name, preserving global names unchanged."
                    },
                    {
                        "signature": "deepClone(java.util.Collection): java.util.Collection",
                        "summary": "Creates and returns a new collection with clones of the items from the provided collection."
                    },
                    {
                        "signature": "equal(java.lang.Object, java.lang.Object): boolean",
                        "summary": "Checks if two objects are equal or both null."
                    },
                    {
                        "signature": "getClassLoader(): java.lang.ClassLoader",
                        "summary": "Retrieves the custom classloader if defined, otherwise returns null to utilize the default classloader."
                    },
                    {
                        "signature": "getClassLoader(java.lang.Class): java.lang.ClassLoader",
                        "summary": "Retrieves the classloader that loaded the specified class, ensuring it is never null."
                    },
                    {
                        "signature": "getClassLoaderSource(): java.lang.String",
                        "summary": "Returns the source of the classloader used, either THREAD_CONTEXT or CLASS_CONTEXT."
                    },
                    {
                        "signature": "getResource(java.lang.String, java.lang.Class): java.net.URL",
                        "summary": "Retrieves the URL of a resource by its absolute name from the specified class's class loader."
                    },
                    {
                        "signature": "getResourceAsStream(java.lang.String, java.lang.Class): java.io.InputStream",
                        "summary": "Retrieves an InputStream for a specified resource using its absolute name."
                    },
                    {
                        "signature": "getResourceRelative(java.lang.String, java.lang.Class): java.net.URL",
                        "summary": "This method retrieves a resource's URL using its relative name and the specified source class."
                    },
                    {
                        "signature": "getResourceRelativeAsStream(java.lang.String, java.lang.Class): java.io.InputStream",
                        "summary": "Retrieves an InputStream for a resource specified by its relative name in the context of a given class."
                    }
                ]
            }
        ],
        "external_invoke_method": [
            "/**\n * General method for signalling to registered listeners that the series\n * has been changed.\n */\npublic void fireSeriesChanged() {\n    if (this.notify) {\n        notifyListeners(new SeriesChangeEvent(this));\n    }\n}",
            "/**\n * Returns the number of items in the series.\n *\n * @return The item count.\n */\npublic int getItemCount() {\n    return this.data.size();\n}",
            "/**\n * Returns the index of the item with the specified x-value, or a negative\n * index if the series does not contain an item with that x-value.  Be\n * aware that for an unsorted series, the index is found by iterating\n * through all items in the series.\n *\n * @param x\n * \t\tthe x-value (<code>null</code> not permitted).\n * @return The index.\n */\npublic int indexOf(Number x) {\n    if (this.autoSort) {\n        return Collections.binarySearch(this.data, new XYDataItem(x, null));\n    } else {\n        for (int i = 0; i < this.data.size(); i++) {\n            XYDataItem item = ((XYDataItem) (this.data.get(i)));\n            if (item.getX().equals(x)) {\n                return i;\n            }\n        }\n        return -1;\n    }\n}"
        ]
    }
}
